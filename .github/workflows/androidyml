# This is a basic workflow to help you get started with Actions

name: Android Build CI

# Controls when the workflow will run
on: [push, pull_request, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.2.3

      - name: Cache haxelib path
        uses: actions/cache@v2
        with:
          path: |
            %HAXELIB_ROOT%
          key: ${{ runner.os }}-android

      - name: Setup Android SDK Tools
        uses: android-actions/setup-android@v2.0.2

      - name: Setup Java JDK
        uses: actions/setup-java@v2.3.1
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'

      - uses: nttld/setup-ndk@v1
        with:
          ndk-version: r15c

      # Runs a set of commands using the runners shell
      - name: script run line haha
        run: |
          mkdir -p "%HAXELIB_ROOT%"
          haxelib setup "%HAXELIB_ROOT%"
          haxelib install lime --quiet
          haxelib install openfl --quiet
          haxelib install flixel --quiet
          haxelib install hxcpp --quiet
          haxelib run lime setup flixel
          haxelib remove flixel-addons --quiet
          haxelib run lime setup
          haxelib run lime config ANDROID_SDK $ANDROID_SDK_ROOT
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_ROOT
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
          haxelib install flixel-tools --quiet
          haxelib install flixel-ui --quiet
          haxelib install hscript --quiet
          haxelib install flxanimate --quiet
          haxelib install fireTongue --quiet
          haxelib install flixel-addons
          haxelib git faxe https://github.com/uhrobots/faxe --quiet
          haxelib install hxCodec
          haxelib git extension-webview https://github.com/MateuzinhoX02/extension-webview.git --quiet
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc --quiet
          haxelib git extension-webm https://github.com/Daninnocent/extension-webm.git --quiet
          haxelib install actuate 
          haxelib list
          haxelib run lime build android -final
          
      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
            	owner: context.repo.owner,
            	repo: context.repo.repo,
            })
            if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            	for (const cache of caches.data.actions_caches) {
            		if (cache.key == "cache-android-build") {
            			console.log('Clearing ' + cache.key + '...')
            			await github.rest.actions.deleteActionsCacheById({
            				owner: context.repo.owner,
            				repo: context.repo.repo,
            				cache_id: cache.id,
            			})
            			console.log("Previous Cache Cleared!")
            		}
            	}
            }
      - name: Save Current Cache
        id: cache-release-build-android-save
        uses: actions/cache/save@main
        with:
          path: |
            .haxelib/
            export/release/android/haxe/
            export/release/android/obj/
          key: cache-android-build

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: DDTO-Android
          path: export/release/android/bin/app/build/outputs/apk/debug
          if-no-files-found: error
